# Simple workflow for deploying static content to GitHub Pages
name: Deploy static content to Pages

# Controls when the action will run.
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build_test:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      - name: Use Node.js 16.x
        uses: actions/setup-node@v2
        with:
          node-version: 16.x
      - name: Install dependencies
        run: npm install
      - name: Check linting and formatting
        # Custom script for checking the linting and formatting being in place
        run: npm run lint
      - name: Test
        run: npm test
        env:
          CI: true
      - name: Generate build
        run: npm run build
#      - name: Deploy the app
#        # This assumes that there is deploy script, change as required
#        run: npm run deploy
#        # Environment secrets, generally stored in Github Secrets (un-comment as required)
#        env:
#          deployment_token: ${{ secrets.ACTIONS_DEPLOY_KEY }}
      - name: deploy to gh-pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          deployment_token: ${{ secrets.ACTIONS_DEPLOY_KEY }}
          publish_dir: dist